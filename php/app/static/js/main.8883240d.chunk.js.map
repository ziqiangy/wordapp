{"version":3,"sources":["icons/arrow-circle-left-solid.svg","icons/plus-circle-solid.svg","icons/edit-solid.svg","icons/font-solid.svg","icons/sticky-note-regular.svg","icons/cloud-solid.svg","icons/arrow-circle-right-solid.svg","icons/eye-regular.svg","icons/eye-slash-regular.svg","icons/external-link-alt-solid.svg","icons/chalkboard-solid.svg","icons/list-alt-regular.svg","Note/NoteEdit.js","Note/NoteList.js","Note/NoteAdd.js","Note/Note.js","Word/WordAdd.js","Word/WordDashboard.js","Word/WordEdit.js","Word/WordList.js","Word/Word.js","PublicAPI/AirQuality.js","PublicAPI/Weather.js","PublicAPI/PublicAPIGroup.js","Board.js","AppHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NoteEdit","props","state","noteId","noteTitle","noteContent","handleInputChange","bind","handleSubmit","handleEdit","handleDelete","this","editId","id","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","then","response","json","result","setState","title","content","catch","error","console","log","event","target","name","value","preventDefault","text","fetchData","closeEdit","className","onClick","src","goBackIcon","alt","onSubmit","htmlFor","type","onChange","rows","React","Component","NoteList","openEdit","showEdit","index","getEditId","handleAdd","addIcon","scope","tableData","map","row","i","key","toString","class","insert_date","NoteAdd","noteDate","currentTime","Date","handler","Note","openAdd","showAdd","closeAdd","WordAdd","wordTitle","wordTranslation","e","WordDashboard","fetchLast","fetchNext","showHide","fetchWord","vocab","count","show","offset","leftArrow","closedEye","openedEye","rightArrow","href","rel","externalLink","Translation","translation","WordEdit","handleOpen","WordList","words","word","push","WordRow","editIcon","Word","openWordAdd","openWordDashboard","openWordEdit","openWordList","data","dashboardIcon","listIcon","AirQuality","AqiData","fetchAirQualityData","forEach","element","res","timestamp_local","split","c","aqi","aqi_color","local_date","local_time","item","style","backgroundColor","Weather","weather","catchWeatherData","valid_date","high_temp","low_temp","icon","PublicAPIGroup","Board","wordOpen","noteOpen","weatherOpen","HandleWordOpen","handleNoteOpen","handlePublicAPIOpen","WordIcon","NoteIcon","WeatherIcon","AppHeader","headerWeather","fetchCurrentWeather","city_name","state_code","temp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8883240d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-circle-left-solid.22995d31.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-circle-solid.2de4ac5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-solid.9a4d5fd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/font-solid.5a0a0658.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-note-regular.59f2e752.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-solid.3052c53b.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-circle-right-solid.e7f07410.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-regular.35985bde.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-slash-regular.b4eb391d.svg\";","module.exports = __webpack_public_path__ + \"static/media/external-link-alt-solid.03979156.svg\";","module.exports = __webpack_public_path__ + \"static/media/chalkboard-solid.f6ffb171.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-alt-regular.1f44e83c.svg\";","import React from 'react';\nimport goBackIcon from '../icons/arrow-circle-left-solid.svg';\nexport default class NoteEdit extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            noteId: '',\n            noteTitle: '',\n            noteContent: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    componentDidMount(){\n        this.handleEdit(this.props.editId);\n    }\n\n    handleEdit(id){\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", id);\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/notes/searchNotes.php\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            this.setState({\n                noteId: result.id,\n                noteTitle: result.title,\n                noteContent: result.content\n            });\n            // this.setState({editData:result});\n\n        })\n        .catch(error => console.log('error', error));\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", this.state.noteId);\n        urlencoded.append(\"title\", this.state.noteTitle);\n        urlencoded.append(\"content\", this.state.noteContent);\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/notes/updateNotes.php\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error))\n        .then(()=>{\n            this.props.fetchData();\n            this.props.closeEdit();\n        });\n    }\n\n    handleDelete(id){\n        // alert(id);\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", id);\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/notes/deleteNotes.php\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error))\n        .then(()=>{\n            this.props.fetchData();\n            this.props.closeEdit();\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"board-wedget\">\n                <div className=\"board-wedget-header\">\n                    <div onClick={this.props.closeEdit}><img className = \"icon-button\" src={goBackIcon} alt=\"Note_edit_go_back_icon\"/></div>\n                </div>\n                <div className =\"board-wedget-body\">\n                    {/* <h1>id {this.state.editData.id}</h1> */}\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"noteTitle\" className=\"col-sm-2 col-form-label\">Title</label>\n                            <div className=\"col-sm-10\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                id=\"noteTitle\" \n                                name=\"noteTitle\" \n                                value={this.state.noteTitle} \n                                onChange={this.handleInputChange}\n                            />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"noteContent\" className=\"col-sm-2 col-form-label\">Content</label>\n                            <div className=\"col-sm-10\">\n                            <textarea \n                                rows=\"5\" \n                                className=\"form-control\" \n                                id=\"noteContent\" \n                                name=\"noteContent\" \n                                value={this.state.noteContent} \n                                onChange={this.handleInputChange}\n                            />\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-outline-dark mb-2\" value=\"Update\" />\n                        <button className=\"btn btn-outline-dark mb-2 ml-2\" onClick={()=>this.handleDelete(this.state.noteId)}>Delete</button>\n                    </form>\n                    \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport NoteEdit from './NoteEdit';\nimport addIcon from '../icons/plus-circle-solid.svg';\nimport editIcon from '../icons/edit-solid.svg';\nexport default class NoteList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            index: ['title', 'insert_date'],\n            showEdit: false,\n            editId: ''\n        }\n\n        \n        this.getEditId = this.getEditId.bind(this);\n        this.openEdit = this.openEdit.bind(this);\n        this.closeEdit = this.closeEdit.bind(this);\n    }\n\n    componentDidMount(){\n        this.props.fetchData()\n    }\n\n    getEditId (id) {\n        this.setState({editId:id},this.openEdit())\n    }\n\n    \n\n    openEdit = () => {\n        this.setState({showEdit:true});\n    }\n\n    closeEdit = () => {\n        this.setState({showEdit:false});\n    }\n\n    \n\n    render(){\n        if(this.state.showEdit){\n            return(<NoteEdit closeEdit = {this.closeEdit} editId = {this.state.editId} fetchData = {this.props.fetchData} />)\n        }else{\n            return(\n                <div className=\"board-wedget\">\n                    <div className=\"board-wedget-header\">\n                        <div onClick={this.props.handleAdd}><img className = \"icon-button\" src={addIcon} alt=\"Add_a_note\"/></div>\n                    </div>\n                    <div className =\"board-wedget-body\">\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">Title</th>\n                            <th scope=\"col\">Insert Date</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.tableData.map((row,i)=>{\n                            return(\n                                <tr key={i.toString()}>      \n                                    <td onClick={()=>this.getEditId(row['id'])} >\n                                        <button \n                                        type=\"button\"\n                                        class=\"btn btn-link\">\n                                            {row.title}\n                                            </button>\n                                    </td>\n                                    <td>{row.insert_date}</td>\n                                    \n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n            )\n        }\n    }\n}","import React from 'react';\nimport goBackIcon from '../icons/arrow-circle-left-solid.svg';\nexport default class NoteAdd extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            noteTitle: '',\n            noteContent: '',\n            noteDate: '',\n            currentTime: new Date()\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"title\", this.state.noteTitle);\n        urlencoded.append(\"content\", this.state.noteContent);\n        urlencoded.append(\"date\", this.state.noteDate);\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/notes/addNotes.php\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error))\n        .then(()=>{\n            this.props.handler();\n        this.props.fetchData();\n        });\n\n        \n\n    }\n    render(){\n        return(\n            <div className=\"board-wedget\">\n                <div className=\"board-wedget-header\">\n                <div onClick={this.props.handler}><img className = \"icon-button\" src={goBackIcon} alt=\"Note_Go_Back_Icon\"/></div>\n                </div>\n                <div className =\"board-wedget-body\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"noteTitle\" className=\"col-sm-2 col-form-label\">Title</label>\n                            <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\" id=\"noteTitle\" name=\"noteTitle\" value={this.state.noteTitle} onChange={this.handleInputChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"noteContent\" className=\"col-sm-2 col-form-label\">Content</label>\n                            <div className=\"col-sm-10\">\n                            <textarea rows=\"5\" className=\"form-control\" id=\"noteContent\" name=\"noteContent\" value={this.state.noteContent} onChange={this.handleInputChange} />\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-outline-dark mb-2\" value=\"Add\" />\n                        \n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport NoteList from './NoteList'\nimport NoteAdd from './NoteAdd';\nexport default class Note extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            \n            tableData: [],\n            showAdd: false,\n            \n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.openAdd = this.openAdd.bind(this);\n        this.closeAdd = this.closeAdd.bind(this);\n    }\n\n    fetchData = () => {\n        var requestOptions = {\n            method: 'POST',\n            redirect: 'follow'\n          };\n          \n          fetch(\"http://peteryuanmac/myhomeapp/php/notes/NoteList.php\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // console.log(result)\n                this.setState({tableData:result})\n                // this.setState({tableData: result}, ()=>{console.log(this.state.tableData)})\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    openAdd = () => {\n        this.setState({showAdd:true});\n    }\n\n    closeAdd = () => {\n        this.setState({showAdd:false});\n    }\n\n    \n    render(){\n        if(this.state.showAdd){\n            return(<NoteAdd handler = {this.closeAdd} fetchData = {this.fetchData} />);\n        }else{\n            return(<NoteList handleAdd={this.openAdd} fetchData ={this.fetchData} tableData={this.state.tableData} />);\n        }\n\n    }\n}","import React from 'react';\nexport default class WordAdd extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            wordTitle:'',\n            wordTranslation:'',\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        // myHeaders.append('Access-Control-Allow-Origin', '*');\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"word\", this.state.wordTitle);\n        urlencoded.append(\"translation\", this.state.wordTranslation);\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow',\n        // mode: 'no-cors'\n        };\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/words/addWords.php\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n\n\n    }\n    handleInputChange(e){\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"wordTitle\" className=\"col-sm-2 col-form-label\">Vocab</label>\n                    <div className=\"col-sm-10\">\n                    <input \n                    type='text' \n                    className=\"form-control\"\n                    id='wordTitle'\n                    name='wordTitle' \n                    value={this.state.wordTitle}\n                    onChange={this.handleInputChange} \n                    />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"wordTranslation\" className=\"col-sm-2 col-form-label\">Translation</label>\n                    <div className=\"col-sm-10\">\n                    <input \n                    type='text' \n                    className=\"form-control\"\n                    id='wordTranslation'\n                    name='wordTranslation' \n                    value={this.state.wordTranslation}\n                    onChange={this.handleInputChange} \n                    />\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-outline-dark mb-2\" value=\"Add\" />\n            </form>\n        )\n    }\n\n}","import React from 'react';\nimport './WordDashboard.css';\nimport leftArrow from '../icons/arrow-circle-left-solid.svg';\nimport rightArrow from '../icons/arrow-circle-right-solid.svg';\nimport openedEye from '../icons/eye-regular.svg';\nimport closedEye from '../icons/eye-slash-regular.svg';\nimport externalLink from '../icons/external-link-alt-solid.svg';\n\nexport default class WordDashboard extends React.Component {\n    constructor(props){\n        super(props)\n        this.fetchLast = this.fetchLast.bind(this)\n        this.fetchNext = this.fetchNext.bind(this)\n        this.showHide = this.showHide.bind(this)\n        this.fetchWord = this.fetchWord.bind(this)\n        this.state = {\n                vocab : [],\n                count : 0,\n                show : false\n        }\n    }\n    componentDidMount(){\n        this.fetchWord(0)\n    }\n    fetchNext(){\n        this.setState({show: false})\n        this.setState({count: this.state.count+1},()=>{this.fetchWord(this.state.count)})\n        //Always remember that setState won't execute immediately. If you want Popup.show() after setState, you can use a callback\n        // this.fetchWord(this.state.count+1)\n    }\n    fetchLast(){\n        this.setState({show: false})\n        this.setState({count: this.state.count-1},()=>{this.fetchWord(this.state.count)})\n        // this.fetchWord(this.state.count-1)\n    }\n    showHide(){\n        this.setState({show:!this.state.show});\n    }\n    fetchWord(offset){\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        let urlencoded = new URLSearchParams();\n        urlencoded.append(\"offset\", offset);\n        \n        let options = {\n            method: 'POST',\n            headers: myHeaders,\n            body: urlencoded,\n            redirect: 'follow'\n        }\n\n        fetch(\"http://peteryuanmac/myhomeapp/php/words/fetchOneWord.php\", options)\n        .then(response => response.json())\n        .then(result => {\n            const vocab = result[0];\n            this.setState({ vocab: vocab });\n        })\n        .catch(error => console.log('error', error));\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"word-header\">\n                    <div className=\"last-page-button\" onClick={()=>this.fetchLast()}><img className = \"icon-button\" src={leftArrow} alt=\"go_back_arrow\" /></div>\n                    <div className=\"show-hide-button\" onClick={()=>this.showHide()}>{this.state.show? <img className = \"icon-button\" src={closedEye} alt=\"close_hint_icon\" /> : <img className = \"icon-button\" src={openedEye} alt=\"open_hint_icon\" />}</div>\n                    <div className=\"next-page-button\" onClick={()=>this.fetchNext()}><img className = \"icon-button\" src={rightArrow} alt=\"move_forward_arrow\" /></div>\n                    <div className=\"vocab-link\"><a href={\"https://www.vocabulary.com/dictionary/\"+this.state.vocab.vocab} target=\"_blank\" rel=\"noopener noreferrer\"><img className = \"icon-button\" src={externalLink} alt=\"go_to_external_link\" /></a></div>\n                </div>\n                <div className =\"word-card\">\n                    <div className=\"vocab\">\n                        <span>{this.state.vocab.vocab}</span>\n                    </div>\n                    <Translation vocab={this.state.vocab} show={this.state.show} />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nclass Translation extends React.Component{\n    render(){\n        if(this.props.show){\n            return(\n            <div className=\"translation\">\n                <span>{this.props.vocab.translation}</span>\n            </div> \n            )\n        }else{\n            return(<div/>)\n        }\n        \n    }\n}","import React from 'react';\nexport default class WordEdit extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            id: '',\n            vocab: '',\n            translation: '',\n\n        }\n        this.fetchWord = this.fetchWord.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    componentDidMount(){\n        this.fetchWord(this.props.editId)\n    }\n\n    fetchWord(id){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        \n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", id);\n        \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow'\n        };\n        \n        fetch(\"http://peteryuanmac/myhomeapp/php/words/searchWords.php?=\", requestOptions)\n          .then(response => response.json())\n          .then(result => {\n            //   console.log(result)\n              this.setState({\n                  id:result.id,\n                  vocab:result.vocab,\n                  translation:result.translation\n                })\n            })\n          .catch(error => console.log('error', error));\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]:target.value\n        })\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        \n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", this.state.id);\n        urlencoded.append(\"vocab\", this.state.vocab);\n        urlencoded.append(\"translation\", this.state.translation);\n        \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow',\n          // mode: 'no-cors'\n        };\n        \n        fetch(\"http://peteryuanmac/myhomeapp/php/words/updateWords.php\", requestOptions)\n          .then(response => response.json())\n          .then(result => console.log(result))\n          .catch(error => console.log('error', error))\n          .then(()=>{\n            this.props.fetchData();\n            this.props.handleOpen('openWordList')\n        });\n\n          \n          \n\n    }\n\n    handleDelete(id){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        \n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"id\", id);\n        \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: urlencoded,\n          redirect: 'follow'\n        };\n        \n        fetch(\"http://peteryuanmac/myhomeapp/php/words/deleteWords.php\", requestOptions)\n          .then(response => response.json())\n          .then(result => console.log(result))\n          .catch(error => console.log('error', error))\n          .then(()=>{\n            this.props.fetchData();\n            this.props.handleOpen('openWordList')\n        });\n          \n    }\n\n    render(){\n        return(\n          \n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"vocab\" className=\"col-sm-2 col-form-label\">Vocab</label>\n                    <div className=\"col-sm-10\">\n                    <input \n                    type='text' \n                    className=\"form-control\"\n                    id='vocab'\n                    name='vocab' \n                    value={this.state.vocab}\n                    onChange={this.handleInputChange} \n                    />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"translation\" className=\"col-sm-2 col-form-label\">Translation</label>\n                    <div className=\"col-sm-10\">\n                    <input \n                    type='text' \n                    className=\"form-control\"\n                    id='translation'\n                    name='translation' \n                    value={this.state.translation}\n                    onChange={this.handleInputChange}\n                    />\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-outline-dark mb-2\" value=\"update\" />\n                <button className=\"btn btn-outline-dark mb-2 ml-2\" onClick={(e)=>this.handleDelete(this.state.id,e)} >Delete</button>\n            </form>\n                \n                \n            \n        )\n    }\n}","import React from 'react';\nimport editIcon from '../icons/edit-solid.svg';\nexport default class WordList extends React.Component{\n    componentDidMount(){\n        this.props.fetchData();\n    }\n    render(){\n        const rows = []\n        this.props.words.map((word)=>{\n            rows.push(\n                <WordRow\n                word={word}\n                key={word.id}\n                getEditId={this.props.getEditId}\n                />\n            )\n        })\n        return(\n            <div>\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nclass WordRow extends React.Component{\n    render(){\n        const word = this.props.word;\n        return(\n            <tr>\n                <td onClick={(e)=>this.props.getEditId(word.id,e)} >\n                    <button \n                    type=\"button\" \n                    class=\"btn btn-link\">\n                        {word.vocab}\n                        </button>\n                </td>\n                <td>{word.translation}</td>\n                <td>\n                <span onClick={(e)=>this.props.getEditId(word.id,e)} ><img className = \"icon-button\" src={editIcon} alt=\"edit_a_note\"/></span>\n                </td>\n            </tr>\n        )\n    }\n}","import React from 'react';\nimport WordAdd from './WordAdd';\nimport WordDashboard from './WordDashboard';\nimport WordEdit from './WordEdit';\nimport WordList from './WordList';\nimport addIcon from '../icons/plus-circle-solid.svg';\nimport dashboardIcon from '../icons/chalkboard-solid.svg';\nimport listIcon from '../icons/list-alt-regular.svg';\nexport default class Word extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            openWordAdd:false,\n            openWordDashboard:true,\n            openWordEdit:false,\n            openWordList:false,\n            editId:'',\n            words:[],\n        }\n        this.handleOpen = this.handleOpen.bind(this);\n        this.getEditId = this.getEditId.bind(this);   \n        this.fetchData = this.fetchData.bind(this);\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    handleOpen(data){\n        this.setState({openWordAdd:false,openWordDashboard:false,openWordEdit:false,openWordList:false})\n        this.setState({[data]:true})\n    }\n    getEditId (id) {\n        this.setState({editId:id},(e)=>{this.handleOpen('openWordEdit',e)})\n    }\n    fetchData(){\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n          fetch(\"http://peteryuanmac/myhomeapp/php/words/listWords.php\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // console.log(result)\n                this.setState({words:result})\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    render(){\n        return(\n            <div className=\"board-wedget\">\n                <div className=\"board-wedget-header\">\n                    <span onClick={(e)=>this.handleOpen('openWordAdd',e)}><img className = \"icon-button ml-5\" src={addIcon} alt=\"addIcon\"/></span>\n                    <span onClick={(e)=>this.handleOpen('openWordDashboard',e)}><img className = \"icon-button ml-5\" src={dashboardIcon} alt=\"dashboardIcon\"/></span>\n                    <span onClick={(e)=>this.handleOpen('openWordList',e)}><img className = \"icon-button ml-5\" src={listIcon} alt=\"listIcon\"/></span>\n                </div>\n                <div className =\"board-wedget-body\">\n                    {this.state.openWordAdd && <WordAdd />}\n                    {this.state.openWordDashboard && <WordDashboard />}\n                    {this.state.openWordEdit && <WordEdit editId={this.state.editId} handleOpen = {this.handleOpen} fetchData = {this.fetchData} />}\n                    {this.state.openWordList && <WordList getEditId = {this.getEditId} words = {this.state.words} fetchData = {this.fetchData} />}\n                </div>\n            </div>\n            \n        )\n    }\n}","import React from 'react';\r\nimport \"./AirQuality.css\"\r\nexport default class AirQuality extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            AqiData : {}\r\n        }\r\n        this.fetchAirQualityData = this.fetchAirQualityData.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchAirQualityData();\r\n    }\r\n\r\n    fetchAirQualityData(){\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n          \r\n          fetch(\"https://api.weatherbit.io/v2.0/forecast/airquality?city=Provo,UT&country=US&key=72761be16d86427e9f4cee1e8c5e5d43\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                result.data.forEach(element=>{\r\n                    var str = element.timestamp_local;\r\n                    var res = str.split(\"T\");\r\n                    // console.log(res[0]);\r\n                    // console.log(res[1]);\r\n                    \r\n                    var c = element.aqi;\r\n                    if(c<=50){\r\n                        element.aqi_color='#009966';\r\n                    }else if(c>50||c<=100){\r\n                        element.aqi_color='#ffde33';\r\n                    }else if(c>100||c<=150){\r\n                        element.aqi_color='#ff9933';\r\n                    }else if(c>150||c<=200){\r\n                        element.aqi_color='#cc0033';\r\n                    }else if(c>200||c<=300){\r\n                        element.aqi_color='#660099';\r\n                    }else{\r\n                        element.aqi_color='#7e0023';\r\n                    }\r\n\r\n                    element.local_date=res[0];\r\n                    element.local_time=res[1];\r\n                    // console.log(element);\r\n                    // element.push(\"local_time\",res[1])\r\n                })\r\n                // console.log(result)\r\n                this.setState({AqiData:result})\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    render(){\r\n        if(this.state.AqiData.data){\r\n            return(\r\n            <div className=\"airquality-wedget\">\r\n                <table>\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {this.state.AqiData.data.map((item,index)=>(\r\n                            <td key={index} style={{backgroundColor:item.aqi_color}}>\r\n                                <ul>\r\n                                    <li>{item.local_date}</li>\r\n                                    <li>{item.local_time}</li>\r\n                                    <li>{item.aqi}</li>\r\n                                </ul>\r\n                            </td>\r\n                            ))}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>)\r\n        }else{\r\n            return(<div>waiting for data</div>)\r\n        }\r\n\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport \"./Weather.css\"\r\nexport default class Weather extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            weather:{},\r\n        }\r\n        this.catchWeatherData = this.catchWeatherData.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.catchWeatherData();\r\n    }\r\n\r\n    catchWeatherData(){\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n          \r\n          fetch(\"https://api.weatherbit.io/v2.0/forecast/daily?city=Provo,UT&country=US&key=72761be16d86427e9f4cee1e8c5e5d43\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                this.setState({weather:result})\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render(){\r\n        // {console.log(this.state.weather)}\r\n        \r\n        if (this.state.weather.data) {\r\n            return(\r\n                <div className=\"weather-wedget\" >\r\n                    <table>\r\n                        <thead>\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                {this.state.weather.data.map((row,index)=>(\r\n                                    <td key={index}>\r\n                                        <ul>\r\n                                            <li>{row.valid_date}</li>\r\n                                            <li>{row.high_temp}°C/{row.low_temp}°C</li>\r\n                                            {/* <li>{row.temp}</li> */}\r\n                                            <li><img src={\"https://www.weatherbit.io/static/img/icons/\"+row.weather.icon+\".png\"} alt=\"weather_icon\" /></li>\r\n                                            {/* <li>{row.weather.description}</li> */}\r\n                                        </ul>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div>waiting for data</div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport AirQuality from './AirQuality';\nimport Weather from './Weather';\nexport default class PublicAPIGroup extends React.Component{\n    render(){\n        return(\n\n            <div className=\"board-wedget\">\n                <div className=\"board-wedget-header\">\n                \n                </div>\n                <div className =\"board-wedget-body\">\n                    <Weather />\n                    <AirQuality />\n                </div>\n            </div>\n            \n        )\n    }\n}","import React from 'react';\nimport './Board.css';\nimport WordIcon from './icons/font-solid.svg';\nimport NoteIcon from './icons/sticky-note-regular.svg';\nimport WeatherIcon from './icons/cloud-solid.svg';\nimport Note from './Note/Note';\nimport Word from './Word/Word';\nimport PublicAPIGroup from './PublicAPI/PublicAPIGroup';\n\nexport default class Board extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            wordOpen: true,\n            noteOpen: true, \n            weatherOpen: true,\n        }\n        this.HandleWordOpen = this.HandleWordOpen.bind(this);\n        this.handleNoteOpen = this.handleNoteOpen.bind(this);\n        this.handlePublicAPIOpen = this.handlePublicAPIOpen.bind(this);\n\n    }\n\n    HandleWordOpen(){\n        this.setState({wordOpen:!this.state.wordOpen});\n    }\n    handleNoteOpen(){\n        this.setState({noteOpen:!this.state.noteOpen})\n    }\n    handlePublicAPIOpen(){\n        this.setState({weatherOpen:!this.state.weatherOpen})\n    }\n\n    render(){\n        return(\n            <div className=\"board\">               \n                <div className=\"board-header\">\n                    <div><img onClick={this.HandleWordOpen} className=\"board-header-img-icon\" src={WordIcon} alt=\"show_or_hide_wordlist\" /></div>\n                    <div><img onClick={this.handleNoteOpen} className=\"board-header-img-icon\" src={NoteIcon} alt=\"show_or_hide_note\" /></div>\n                    <div><img onClick={this.handlePublicAPIOpen} className=\"board-header-img-icon\" src={WeatherIcon} alt=\"show_or_hide_weather_or_PublicAPI\" /></div>\n                </div>\n                <div className=\"board-body\">\n                    {this.state.wordOpen? <Word />:<div/>}\n                    {this.state.noteOpen? <Note />:<div/>}\n                    {this.state.weatherOpen? <PublicAPIGroup />:<div/>}\n                </div>\n            </div>\n        )\n        \n    }\n}\n","import React from 'react';\nimport './AppHeader.css';\nexport default class AppHeader extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            headerWeather:{},\n        }\n        this.fetchCurrentWeather = this.fetchCurrentWeather.bind(this)\n    }\n\n    componentDidMount(){\n        this.fetchCurrentWeather();    \n    }\n    fetchCurrentWeather(){\n        var myHeaders = new Headers();\n        myHeaders.append(\"x-rapidapi-host\", \"weatherbit-v1-mashape.p.rapidapi.com\");\n        myHeaders.append(\"x-rapidapi-key\", \"5f3329cca2msh78620cada34b33dp16d603jsn72ee5e90dcc9\");\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n        };\n\n        fetch(\"https://weatherbit-v1-mashape.p.rapidapi.com/current?lang=en&lon=-111.658531&lat=40.233845\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            // console.log(result)\n            this.setState({headerWeather:result})\n        })\n        .catch(error => console.log('error', error));\n    }\n    render(){\n        if(this.state.headerWeather.data){\n            return(\n                <div className=\"app-header-weather\">\n                    <div className=\"app-header-weather-fonts\">\n                        {this.state.headerWeather.data[0].city_name}, \n                        {this.state.headerWeather.data[0].state_code} | \n                        {this.state.headerWeather.data[0].temp}°C \n                        <img src={\"https://www.weatherbit.io/static/img/icons/\"+this.state.headerWeather.data[0].weather.icon+\".png\"} alt=\"show_weather_icon\" /> | \n                        {this.state.headerWeather.data[0].aqi}</div>\n                </div>\n            )\n        }else{\n            return(<div>waiting for data</div>)\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport Board from './Board';\nimport AppHeader from './AppHeader';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}